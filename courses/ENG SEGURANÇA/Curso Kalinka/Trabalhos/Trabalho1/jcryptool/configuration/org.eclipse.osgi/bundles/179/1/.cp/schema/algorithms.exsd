<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.jcryptool.core.operations" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.jcryptool.core.operations" id="algorithms" name="Algorithms extension point (symmetric, asymmetric, etc.)"/>
      </appInfo>
      <documentation>
         This is one of the most important extension points available in JCrypTool. It is used to add new algorithms (classic, symmetric, asymmetric, hybrid and any other type) to JCrypTool. This extension point must be consumed by every algorithm plug-in that wants to contribute to the JCrypTool Algorithm menu or the Algorithms view on the Algorithms tab.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="algorithm"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  an (required) unique identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="algorithm">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  A unique identifier used as a reference for this algorithm.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  A translatable name that will be used in the UI for this algorithm.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="type" use="required">
            <annotation>
               <documentation>
                  Select the appropriate type of the algorithm, i.e. &quot;classic&quot; for the Caesar algorithm, &quot;symmetric&quot; for DES or &quot;asymmetric&quot; for RSA...
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="classic">
                  </enumeration>
                  <enumeration value="symmetric">
                  </enumeration>
                  <enumeration value="asymmetric">
                  </enumeration>
                  <enumeration value="hybrid">
                  </enumeration>
                  <enumeration value="hash">
                  </enumeration>
                  <enumeration value="misc">
                  </enumeration>
                  <enumeration value="signature">
                  </enumeration>
                  <enumeration value="mac">
                  </enumeration>
                  <enumeration value="prng">
                  </enumeration>
                  <enumeration value="USER_DEFINED">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="user_defined_type" type="string">
            <annotation>
               <documentation>
                  A user defined category. This category is only created if the type attribute is set to USER_DEFINED. Try to stick to the default categories provided since too many categories will polute the JCrypTool GUI.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements &lt;samp&gt;org.jcryptool.core.algorithms.AbstractAlgorithm&lt;/samp&gt;. Providing  a useful value (that is a short name for the algorithm) for the &lt;samp&gt;getAlgorithmName&lt;/samp&gt; method is required for every plug-in that wants to contribute its actions to the Actions view.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.jcryptool.core.operations.algorithm.AbstractAlgorithm"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="actionClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements &lt;samp&gt;org.jcryptool.core.algorithms.AbstractAlgorithmAction&lt;/samp&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.jcryptool.core.operations.algorithm.AbstractAlgorithmAction"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="cmdClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class that implements &lt;samp&gt;org.jcryptool.core.algorithms.AbstractAlgorithmCmd&lt;/samp&gt;.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.jcryptool.core.operations.algorithm.AbstractAlgorithmCmd"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="engineClass" type="string">
            <annotation>
               <documentation>
                  This class should only be provided by extensions which represent a classic algorithm.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.jcryptool.core.operations.algorithm.IClassicAlgorithmEngine"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="keylengths" type="string">
            <annotation>
               <documentation>
                  The key lengths that this algorithm plug-in supports. Be advised, the available key lengths should be separated by a &apos;|&apos; and in ascending order, i.e. 128|256|512| ...

If there should be only one key length, there is no need for a trailing &apos;|&apos;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="blocklengths" type="string">
            <annotation>
               <documentation>
                  The block lengths that this algorithm plug-in supports. Be advised, the available block lengths should be separated by a &apos;|&apos;, i.e. 128|256|512| ...

If there should be only one block length, there is no need for a trailing &apos;|&apos;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="tooltip" type="string">
            <annotation>
               <documentation>
                  The tooltip text that will be displayed when the mouse hovers above the action in the menu or view. You are strongly encouraged to provide a short tooltip.
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="contextHelpId" type="string">
            <annotation>
               <documentation>
                  A unique identifier indicating the help context for the action. When the action appears in the menu, pressing F1 while the menu item is highlighted will display help.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="icon" type="string">
            <annotation>
               <documentation>
                  The default icon.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="disabledIcon" type="string">
            <annotation>
               <documentation>
                  The disabled icon.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="hoverIcon" type="string">
            <annotation>
               <documentation>
                  The hover icon.
               </documentation>
               <appInfo>
                  <meta.attribute kind="resource"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="isFlexiProviderAlgorithm" type="boolean">
            <annotation>
               <documentation>
                  Determines if the algorithm is shown as a FlexiProvider algorithm.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         JCrypTool 1.0.0 Milestone 5 (0.5.0)
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of an &lt;b&gt;alphabets&lt;/b&gt; extension definition:

&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.jcryptool.core.operations.algorithms&quot;&gt;
  &lt;algorithm
    id=&quot;org.jcryptool.classic.caesar&quot;
    name=&quot;Caesar&quot;
    class=&quot;org.jcryptool.classic.caesar.CaesarAlgorithm&quot;
    actionClass=&quot;org.jcryptool.classic.caesar.CasarAction&quot;
    cmdClass=&quot;org.jcryptool.classic.caesar.CaesarCmd&quot;
    wizardClass=&quot;org.jcryptool.classic.caesar.CaesarWizard&quot;
  &lt;/algorithm&gt;
&lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         JCrypTool algorithm plug-ins (classic and modern) add several algorithms to the platform. Algorithms registered through this extension will be added according to their category information.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         (c) 2010 JCrypTool Core team
      </documentation>
   </annotation>

</schema>
