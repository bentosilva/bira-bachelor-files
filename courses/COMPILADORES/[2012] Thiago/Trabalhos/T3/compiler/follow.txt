Gramática analisada:

﻿1. <programa> ::= program ident ; <corpo> .
 2. <corpo> ::= <dc> begin <comandos> end
 3. <dc> ::= <dc_v> <dc_p>
 4. <dc_v> ::= var <variaveis> : <tipo_var> ; <dc_v> | λ
 5. <tipo_var> ::= real | integer
 6. <variaveis> ::= ident <mais_var>
 7. <mais_var> ::= , <variaveis> | λ
 8. <dc_p> ::= procedure ident <parametros> ; <corpo_p> <dc_p> | λ
 9. <parametros> ::= ( <lista_par> ) | λ
10. <lista_par> ::= <variaveis> : <tipo_var> <mais_par>
11. <mais_par> ::= ; <lista_par> | λ
12. <corpo_p> ::= <dc_loc> begin <comandos> end ;
13. <dc_loc> ::= <dc_v>
14. <lista_arg> ::= ( <argumentos> ) | λ
15. <argumentos> ::= ident <mais_ident>
16. <mais_ident> ::= ; <argumentos> | λ
17. <pfalsa> ::= else <cmd> | λ
18. <comandos> ::= <cmd> ; <comandos> | λ
19a. <cmd> ::= read ( <variaveis> ) |
	write ( <variaveis> ) |
	while <condicao> do <cmd> |
	if <condicao> then <cmd> <pfalsa> |
	ident <pos_ident> |
	begin <comandos> end |
	repeat <comandos> until <condicao>
19b. <pos_ident> ::= := <expressao> | <lista_arg>
20. <condicao> ::= <expressao> <relacao> <expressao>
21. <relacao> ::= = | <> | >= | <= | > | <
22. <expressao> ::= <termo> <outros_termos>
23. <op_un> ::= + | - | λ
24. <outros_termos> ::= <op_ad> <termo> <outros_termos> | λ
25. <op_ad> ::= + | -
26. <termo> ::= <op_un> <fator> <mais_fatores>
27. <mais_fatores> ::= <op_mul> <fator> <mais_fatores> | λ
28. <op_mul> ::= * | /
29. <fator> ::= ident | numero_int | numero_real | ( <expressao> )

-----

Calculando a função follow:
Passo 1 - Observação direta da gramática

 1. follow(<programa>) = {λ}
 2. follow(<corpo>) = {.}
 3. follow(<dc>) = {begin}
 4. follow(<dc_v>) = first(<dc_p>) //U follow(<dc_p>)
	U follow(<dc_v>) U follow(<dc_loc>)
 5. follow(<tipo_var>) = {;} U first(<mais_par>) //U follow(<mais_par>)

 6. follow(<variaveis>) = {:} U follow(<mais_var>) U {:} U {)}
 7. follow(<mais_var>) = follow(<variaveis>)
 8. follow(<dc_p>) = follow(<dc>) U follow(<dc_p>)
 9. follow(<parametros>) = {;}
10. follow(<lista_par>) = {)} U follow(<mais_par>)

11. follow(<mais_par>) = follow(<lista_par>)
12. follow(<corpo_p>) = first(<dc_p>) //U follow(<dc_p>)
13. follow(<dc_loc>) = {begin}
14. follow(<lista_arg>) = follow(<pos_ident>)
15. follow(<argumentos>) = {)} U follow(<mais_ident>)

16. follow(<mais_ident>) = follow(<argumentos>)
17. follow(<pfalsa>) = follow(<cmd>)
18. follow(<comandos>) = {end} U {end} U follow(<comandos>) U {end} U {until}
19a. follow(<cmd>) = follow(<pfalsa>) U {;} U follow(<cmd>)
	U first(<pfalsa>) //U follow(<pfalsa>)
19b. follow(<pos_ident>) = follow(<cmd>)

20. follow(<condicao>) = {do, then} U follow(<cmd>)
21. follow(<relacao>) = first(<expressao>) //U follow(<expressao>)
22. follow(<expressao>) = follow(<pos_ident>)
	U first(<relacao>) //U follow(<relacao>)
	U follow(<condicao>) U {)}
23. follow(<op_un>) = first(<fator>) //U follow(<fator>)
24. follow(<outros_termos>) = follow(<expressao>) U follow(<outros_termos>)

25. follow(<op_ad>) = first(<termo>) //U follow(<termo>)
26. follow(<termo>) = first(<outros_termos>) //U follow(<outros_termos>)
	U first(<outros_termos>) //U follow(<outros_termos>)
27. follow(<mais_fatores>) = follow(<termo>) U follow(<mais_fatores>)
28. follow(<op_mul>) = first(<fator>) //U follow(<fator>)
29. follow(<fator>) = first(<mais_fatores>) //U follow(<mais_fatores>)
	U first(<mais_fatores>) //U follow(<mais_fatores>)

-----

Resultados do passo 1:

Resolvidos:
 1. follow(<programa>) = {λ}
 2. follow(<corpo>) = {.}
 3. follow(<dc>) = {begin}
 9. follow(<parametros>) = {;}
13. follow(<dc_loc>) = {begin}

Pendentes:
 4. follow(<dc_v>) = follow(<dc_v>) U follow(<dc_loc>)
	U first(<dc_p>) //U follow(<dc_p>)
 5. follow(<tipo_var>) = {;} U first(<mais_par>) //U follow(<mais_par>)
 6. follow(<variaveis>) = {:, )} U follow(<mais_var>)
 8. follow(<dc_p>) = follow(<dc>) U follow(<dc_p>)
10. follow(<lista_par>) = {)} U follow(<mais_par>)
12. follow(<corpo_p>) = first(<dc_p>) //U follow(<dc_p>)
15. follow(<argumentos>) = {)} U follow(<mais_ident>)
18. follow(<comandos>) = {end, until} U follow(<comandos>)
19a. follow(<cmd>) = {;} U follow(<pfalsa>) U follow(<cmd>)
	U first(<pfalsa>) //U follow(<pfalsa>)
20. follow(<condicao>) = {do, then} U follow(<cmd>)
21. follow(<relacao>) = first(<expressao>) //U follow(<expressao>)
22. follow(<expressao>) = {)} U follow(<pos_ident>) U follow(<condicao>)
	U first(<relacao>) //U follow(<relacao>)
23. follow(<op_un>) = first(<fator>) //U follow(<fator>)
24. follow(<outros_termos>) = follow(<expressao>) U follow(<outros_termos>)
25. follow(<op_ad>) = first(<termo>) //U follow(<termo>)
26. follow(<termo>) = first(<outros_termos>) //U follow(<outros_termos>)
27. follow(<mais_fatores>) = follow(<termo>) U follow(<mais_fatores>)
28. follow(<op_mul>) = first(<fator>) //U follow(<fator>)
29. follow(<fator>) = first(<mais_fatores>) //U follow(<mais_fatores>)

Pendentes Fáceis:
 7. follow(<mais_var>) = follow(<variaveis>)
11. follow(<mais_par>) = follow(<lista_par>)
14. follow(<lista_arg>) = follow(<pos_ident>)
16. follow(<mais_ident>) = follow(<argumentos>)
17. follow(<pfalsa>) = follow(<cmd>)
19b. follow(<pos_ident>) = follow(<cmd>)

-----

Calculando a função follow:
Passo 2 - Função first

 4. follow(<dc_v>) = follow(<dc_v>) U follow(<dc_loc>)
	U {procedure} U follow(<dc_p>) //λ in first(<dc_p>)
 5. follow(<tipo_var>) = {;} U {;} U follow(<mais_par>)
	//λ in first(<mais_par>)
 6. follow(<variaveis>) = {:, )} U follow(<mais_var>)
 8. follow(<dc_p>) = follow(<dc>) U follow(<dc_p>)
10. follow(<lista_par>) = {)} U follow(<mais_par>)
12. follow(<corpo_p>) = {procedure} U follow(<dc_p>) //λ in first(<dc_p>)
15. follow(<argumentos>) = {)} U follow(<mais_ident>)
18. follow(<comandos>) = {end, until} U follow(<comandos>)
19a. follow(<cmd>) = {;} U follow(<pfalsa>) U follow(<cmd>)
	U {else} U follow(<pfalsa>) //λ in first(<pfalsa>)
20. follow(<condicao>) = {do, then} U follow(<cmd>)
21. follow(<relacao>) = {+, -, ident, numero_int, numero_real, (}
	//λ not in first(<expressao>)
22. follow(<expressao>) = {)} U follow(<pos_ident>) U follow(<condicao>)
	U {=, <>, >=, <=, >, <} //λ not in first(<relacao>)
23. follow(<op_un>) = {ident, numero_int, numero_real, (}
	//λ not in first(<fator>)
24. follow(<outros_termos>) = follow(<expressao>) U follow(<outros_termos>)
25. follow(<op_ad>) = {+, -, ident, numero_int, numero_real, (}
	//λ not in first(<termo>)
26. follow(<termo>) = {+, -} U follow(<outros_termos>)
	//λ in first(<outros_termos>)
27. follow(<mais_fatores>) = follow(<termo>) U follow(<mais_fatores>)
28. follow(<op_mul>) = {ident, numero_int, numero_real, (}
	//λ not in first(<fator>)
29. follow(<fator>) = {*, /} U follow(<mais_fatores>)
	//λ in first(<mais_fatores>)

 7. follow(<mais_var>) = follow(<variaveis>)
11. follow(<mais_par>) = follow(<lista_par>)
14. follow(<lista_arg>) = follow(<pos_ident>)
16. follow(<mais_ident>) = follow(<argumentos>)
17. follow(<pfalsa>) = follow(<cmd>)
19b. follow(<pos_ident>) = follow(<cmd>)

Usando valores da função first:
 8. first(<dc_p>) = {procedure, λ}
11. first(<mais_par>) = {;, λ}
17. first(<pfalsa>) = {else, λ}
21. first(<relacao>) = {=, <>, >=, <=, >, <}
22. first(<expressao>) = {+, -, ident, numero_int, numero_real, (}
24. first(<outros_termos>) = {+, -, λ}
26. first(<termo>) = {+, -, ident, numero_int, numero_real, (}
27. first(<mais_fatores>) = {*, /, λ}
29. first(<fator>) = {ident, numero_int, numero_real, (}

-----

Resultados do passo 2:

Resolvidos:
 1. follow(<programa>) = {λ}
 2. follow(<corpo>) = {.}
 3. follow(<dc>) = {begin}
 9. follow(<parametros>) = {;}
13. follow(<dc_loc>) = {begin}
21. follow(<relacao>) = {+, -, ident, numero_int, numero_real, (}
23. follow(<op_un>) = {ident, numero_int, numero_real, (}
25. follow(<op_ad>) = {+, -, ident, numero_int, numero_real, (}
28. follow(<op_mul>) = {ident, numero_int, numero_real, (}

Pendentes:
 4. follow(<dc_v>) = {procedure} U follow(<dc_v>)
	U follow(<dc_loc>) U follow(<dc_p>)
 5. follow(<tipo_var>) = {;} U follow(<mais_par>)
 6. follow(<variaveis>) = {:, )} U follow(<mais_var>)
 8. follow(<dc_p>) = {begin} U follow(<dc_p>)
10. follow(<lista_par>) = {)} U follow(<mais_par>)
12. follow(<corpo_p>) = {procedure} U follow(<dc_p>)
15. follow(<argumentos>) = {)} U follow(<mais_ident>)
18. follow(<comandos>) = {end, until} U follow(<comandos>)
19a. follow(<cmd>) = {else, ;} U follow(<pfalsa>) U follow(<cmd>)
20. follow(<condicao>) = {do, then} U follow(<cmd>)
22. follow(<expressao>) = {=, <>, >=, <=, >, <, )}
	U follow(<pos_ident>) U follow(<condicao>)
24. follow(<outros_termos>) = follow(<expressao>) U follow(<outros_termos>)
26. follow(<termo>) = {+, -} U follow(<outros_termos>)
27. follow(<mais_fatores>) = follow(<termo>) U follow(<mais_fatores>)
29. follow(<fator>) = {*, /} U follow(<mais_fatores>)

Pendentes Fáceis:
 7. follow(<mais_var>) = follow(<variaveis>)
11. follow(<mais_par>) = follow(<lista_par>)
14. follow(<lista_arg>) = follow(<pos_ident>)
16. follow(<mais_ident>) = follow(<argumentos>)
17. follow(<pfalsa>) = follow(<cmd>)
19b. follow(<pos_ident>) = follow(<cmd>)

-----

Calculando a função follow (passo 3):

 4. follow(<dc_v>) = {procedure} U {begin} U follow(<dc_p>)
 5. follow(<tipo_var>) = {;} U follow(<lista_par>)
 6. follow(<variaveis>) = {:, )}
 8. follow(<dc_p>) = {begin}
10. follow(<lista_par>) = {)}
12. follow(<corpo_p>) = {procedure} U follow(<dc_p>)
15. follow(<argumentos>) = {)}
18. follow(<comandos>) = {end, until}
19a. follow(<cmd>) = {else, ;}
20. follow(<condicao>) = {do, then} U follow(<cmd>)
22. follow(<expressao>) = {=, <>, >=, <=, >, <, )}
	U follow(<cmd>) U follow(<condicao>)
24. follow(<outros_termos>) = follow(<expressao>)
26. follow(<termo>) = {+, -} U follow(<outros_termos>)
27. follow(<mais_fatores>) = follow(<termo>)
29. follow(<fator>) = {*, /} U follow(<mais_fatores>)

 7. follow(<mais_var>) = follow(<variaveis>)
11. follow(<mais_par>) = follow(<lista_par>)
14. follow(<lista_arg>) = follow(<cmd>)
16. follow(<mais_ident>) = follow(<argumentos>)
17. follow(<pfalsa>) = follow(<cmd>)
19b. follow(<pos_ident>) = follow(<cmd>)

-----

Resultados do passo 3:

Resolvidos:
 6. follow(<variaveis>) = {:, )}
 8. follow(<dc_p>) = {begin}
10. follow(<lista_par>) = {)}
15. follow(<argumentos>) = {)}
18. follow(<comandos>) = {end, until}
19a. follow(<cmd>) = {else, ;}

Pendentes:
 4. follow(<dc_v>) = {procedure, begin} U follow(<dc_p>)
 5. follow(<tipo_var>) = {;} U follow(<lista_par>)
12. follow(<corpo_p>) = {procedure} U follow(<dc_p>)
20. follow(<condicao>) = {do, then} U follow(<cmd>)
22. follow(<expressao>) = {=, <>, >=, <=, >, <, )}
	U follow(<cmd>) U follow(<condicao>)
26. follow(<termo>) = {+, -} U follow(<outros_termos>)
29. follow(<fator>) = {*, /} U follow(<mais_fatores>)

Pendentes Fáceis:
 7. follow(<mais_var>) = follow(<variaveis>)
11. follow(<mais_par>) = follow(<lista_par>)
14. follow(<lista_arg>) = follow(<cmd>)
16. follow(<mais_ident>) = follow(<argumentos>)
17. follow(<pfalsa>) = follow(<cmd>)
19b. follow(<pos_ident>) = follow(<cmd>)
24. follow(<outros_termos>) = follow(<expressao>)
27. follow(<mais_fatores>) = follow(<termo>)

-----

Calculando a função follow (passo 4):

 4. follow(<dc_v>) = {procedure, begin} U {begin}
 5. follow(<tipo_var>) = {;} U {)}
12. follow(<corpo_p>) = {procedure} U {begin}
20. follow(<condicao>) = {do, then} U {else, ;}
22. follow(<expressao>) = {=, <>, >=, <=, >, <, )}
	U {else, ;} U follow(<condicao>)
26. follow(<termo>) = {+, -} U follow(<expressao>)
29. follow(<fator>) = {*, /} U follow(<termo>)

 7. follow(<mais_var>) = {:, )}
11. follow(<mais_par>) = {)}
14. follow(<lista_arg>) = {else, ;}
16. follow(<mais_ident>) = {)}
17. follow(<pfalsa>) = {else, ;}
19b. follow(<pos_ident>) = {else, ;}
24. follow(<outros_termos>) = follow(<expressao>)
27. follow(<mais_fatores>) = follow(<termo>)

-----

Resultados do passo 4:

Resolvidos:
 4. follow(<dc_v>) = {procedure, begin}
 5. follow(<tipo_var>) = {), ;}
 7. follow(<mais_var>) = {:, )}
11. follow(<mais_par>) = {)}
12. follow(<corpo_p>) = {procedure, begin}
14. follow(<lista_arg>) = {else, ;}
16. follow(<mais_ident>) = {)}
17. follow(<pfalsa>) = {else, ;}
19b. follow(<pos_ident>) = {else, ;}
20. follow(<condicao>) = {do, then, else, ;}

Pendentes:
22. follow(<expressao>) = {=, <>, >=, <=, >, <, ), else, ;}
	U follow(<condicao>)
26. follow(<termo>) = {+, -} U follow(<expressao>)
29. follow(<fator>) = {*, /} U follow(<termo>)

Pendentes Fáceis:
24. follow(<outros_termos>) = follow(<expressao>)
27. follow(<mais_fatores>) = follow(<termo>)

-----

Calculando a função follow (passo 5):

22. follow(<expressao>) = {=, <>, >=, <=, >, <, ), else, ;}
	U {do, then, else, ;}
26. follow(<termo>) = {+, -} U follow(<expressao>)
29. follow(<fator>) = {*, /} U follow(<termo>)

24. follow(<outros_termos>) = follow(<expressao>)
27. follow(<mais_fatores>) = follow(<termo>)

-----

Resultados do passo 5:

Resolvidos:
22. follow(<expressao>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}

Pendentes:
26. follow(<termo>) = {+, -} U follow(<expressao>)
29. follow(<fator>) = {*, /} U follow(<termo>)

Pendentes Fáceis:
24. follow(<outros_termos>) = follow(<expressao>)
27. follow(<mais_fatores>) = follow(<termo>)

-----

Calculando a função follow (passo 6):

26. follow(<termo>) = {+, -} U {=, <>, >=, <=, >, <, ), do, then, else, ;}
29. follow(<fator>) = {*, /} U follow(<termo>)

24. follow(<outros_termos>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}
27. follow(<mais_fatores>) = follow(<termo>)

-----

Resultados do passo 6:

Resolvidos:
26. follow(<termo>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
24. follow(<outros_termos>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}

Pendentes:
29. follow(<fator>) = {*, /} U follow(<termo>)

Pendentes Fáceis:
27. follow(<mais_fatores>) = follow(<termo>)

-----

Calculando a função follow (passo 7):

29. follow(<fator>) = {*, /} U {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
27. follow(<mais_fatores>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}

-----

Resultados do passo 7:

Resolvidos:
29. follow(<fator>) = {*, /, +, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
27. follow(<mais_fatores>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}

Pendentes:

Pendentes Fáceis:

-----
Resultado Final:

 1. follow(<programa>) = {λ}
 2. follow(<corpo>) = {.}
 3. follow(<dc>) = {begin}
 4. follow(<dc_v>) = {procedure, begin}
 5. follow(<tipo_var>) = {), ;}
 6. follow(<variaveis>) = {:, )}
 7. follow(<mais_var>) = {:, )}
 8. follow(<dc_p>) = {begin}
 9. follow(<parametros>) = {;}
10. follow(<lista_par>) = {)}
11. follow(<mais_par>) = {)}
12. follow(<corpo_p>) = {procedure, begin}
13. follow(<dc_loc>) = {begin}
14. follow(<lista_arg>) = {else, ;}
15. follow(<argumentos>) = {)}
16. follow(<mais_ident>) = {)}
17. follow(<pfalsa>) = {else, ;}
18. follow(<comandos>) = {end, until}
19a. follow(<cmd>) = {else, ;}
19b. follow(<pos_ident>) = {else, ;}
20. follow(<condicao>) = {do, then, else, ;}
21. follow(<relacao>) = {+, -, ident, numero_int, numero_real, (}
22. follow(<expressao>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}
23. follow(<op_un>) = {ident, numero_int, numero_real, (}
24. follow(<outros_termos>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}
25. follow(<op_ad>) = {+, -, ident, numero_int, numero_real, (}
26. follow(<termo>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
27. follow(<mais_fatores>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
28. follow(<op_mul>) = {ident, numero_int, numero_real, (}
29. follow(<fator>) = {*, /, +, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
