1. <programa> ::= program ident ; <corpo> .
 2. <corpo> ::= <dc> begin <comandos> end
 3. <dc> ::= <dc_v> <dc_p>
 4. <dc_v> ::= var <variaveis> : <tipo_var> ; <dc_v> | λ
 5. <tipo_var> ::= real | integer
 6. <variaveis> ::= ident <mais_var>
 7. <mais_var> ::= , <variaveis> | λ
 8. <dc_p> ::= procedure ident <parametros> ; <corpo_p> <dc_p> | λ
 9. <parametros> ::= ( <lista_par> ) | λ
10. <lista_par> ::= <variaveis> : <tipo_var> <mais_par>
11. <mais_par> ::= ; <lista_par> | λ
12. <corpo_p> ::= <dc_loc> begin <comandos> end ;
13. <dc_loc> ::= <dc_v>
14. <lista_arg> ::= ( <argumentos> ) | λ
15. <argumentos> ::= ident <mais_ident>
16. <mais_ident> ::= ; <argumentos> | λ
17. <pfalsa> ::= else <cmd> | λ
18. <comandos> ::= <cmd> ; <comandos> | λ
19a. <cmd> ::= read ( <variaveis> ) |
	write ( <variaveis> ) |
	while <condicao> do <cmd> |
	if <condicao> then <cmd> <pfalsa> |
	ident <pos_ident> |
	begin <comandos> end |
	repeat <comandos> until <condicao>
19b. <pos_ident> ::= := <expressao> | <lista_arg>
20. <condicao> ::= <expressao> <relacao> <expressao>
21. <relacao> ::= = | <> | >= | <= | > | <
22. <expressao> ::= <termo> <outros_termos>
23. <op_un> ::= + | - | λ
24. <outros_termos> ::= <op_ad> <termo> <outros_termos> | λ
25. <op_ad> ::= + | -
26. <termo> ::= <op_un> <fator> <mais_fatores>
27. <mais_fatores> ::= <op_mul> <fator> <mais_fatores> | λ
28. <op_mul> ::= * | /
29. <fator> ::= ident | numero_int | numero_real | ( <expressao> )

 1. first(<programa>) = {program}
 2. first(<corpo>) = {var, procedure, begin}
 3. first(<dc>) = {var, procedure, λ}
 4. first(<dc_v>) = {var, λ}
 5. first(<tipo_var>) = {real, integer}
 6. first(<variaveis>) = {ident}
 7. first(<mais_var>) = {',', λ}
 8. first(<dc_p>) = {procedure, λ}
 9. first(<parametros>) = {(, λ}
10. first(<lista_par>) = {ident}
11. first(<mais_par>) = {;, λ}
12. first(<corpo_p>) = {var, begin}
13. first(<dc_loc>) = {var, λ}
14. first(<lista_arg>) = {(, λ}
15. first(<argumentos>) = {ident}
16. first(<mais_ident>) = {;, λ}
17. first(<pfalsa>) = {else, λ}
18. first(<comandos>) = {read, write, while, if, ident, begin, repeat, λ}
19a. first(<cmd>) = {read, write, while, if, ident, begin, repeat}
19b. first(<pos_ident>) = {:=, (, λ}
20. first(<condicao>) = {+, -, ident, numero_int, numero_real, (}
21. first(<relacao>) = {=, <>, >=, <=, >, <}
22. first(<expressao>) = {+, -, ident, numero_int, numero_real, (}
23. first(<op_un>) = {+, -, λ}
24. first(<outros_termos>) = {+, -, λ}
25. first(<op_ad>) = {+, -}
26. first(<termo>) = {+, -, ident, numero_int, numero_real, (}
27. first(<mais_fatores>) = {*, /, λ}
28. first(<op_mul>) = {*, /}
29. first(<fator>) = {ident, numero_int, numero_real, (}

 1. follow(<programa>) = {λ}
 2. follow(<corpo>) = {.}
 3. follow(<dc>) = {begin}
 4. follow(<dc_v>) = {procedure, begin}
 5. follow(<tipo_var>) = {), ;}
 6. follow(<variaveis>) = {:, )}
 7. follow(<mais_var>) = {:, )}
 8. follow(<dc_p>) = {begin}
 9. follow(<parametros>) = {;}
10. follow(<lista_par>) = {)}
11. follow(<mais_par>) = {)}
12. follow(<corpo_p>) = {procedure, begin}
13. follow(<dc_loc>) = {begin}
14. follow(<lista_arg>) = {else, ;}
15. follow(<argumentos>) = {)}
16. follow(<mais_ident>) = {)}
17. follow(<pfalsa>) = {else, ;}
18. follow(<comandos>) = {end, until}
19a. follow(<cmd>) = {else, ;}
19b. follow(<pos_ident>) = {else, ;}
20. follow(<condicao>) = {do, then, else, ;}
21. follow(<relacao>) = {+, -, ident, numero_int, numero_real, (}
22. follow(<expressao>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}
23. follow(<op_un>) = {ident, numero_int, numero_real, (}
24. follow(<outros_termos>) = {=, <>, >=, <=, >, <, ), do, then, else, ;}
25. follow(<op_ad>) = {+, -, ident, numero_int, numero_real, (}
26. follow(<termo>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
27. follow(<mais_fatores>) = {+, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
28. follow(<op_mul>) = {ident, numero_int, numero_real, (}
29. follow(<fator>) = {*, /, +, -, =, <>, >=, <=, >, <, ), do, then, else, ;}
