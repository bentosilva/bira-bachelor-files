/* Generated By:JavaCC: Do not edit this line. PascalConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface PascalConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 5;
  /** RegularExpression Id. */
  int MULTI = 6;
  /** RegularExpression Id. */
  int SOMA = 7;
  /** RegularExpression Id. */
  int SUBTRACAO = 8;
  /** RegularExpression Id. */
  int MULTIPLICACAO = 9;
  /** RegularExpression Id. */
  int DIV = 10;
  /** RegularExpression Id. */
  int OPATRIB = 11;
  /** RegularExpression Id. */
  int VIRGULA = 12;
  /** RegularExpression Id. */
  int PV = 13;
  /** RegularExpression Id. */
  int PONTO = 14;
  /** RegularExpression Id. */
  int LT = 15;
  /** RegularExpression Id. */
  int LE = 16;
  /** RegularExpression Id. */
  int GT = 17;
  /** RegularExpression Id. */
  int GE = 18;
  /** RegularExpression Id. */
  int EQ = 19;
  /** RegularExpression Id. */
  int NE = 20;
  /** RegularExpression Id. */
  int PAR_ABRE = 21;
  /** RegularExpression Id. */
  int PAR_FECHA = 22;
  /** RegularExpression Id. */
  int PROGRAM = 23;
  /** RegularExpression Id. */
  int VAR = 24;
  /** RegularExpression Id. */
  int PROCEDURE = 25;
  /** RegularExpression Id. */
  int BEGIN = 26;
  /** RegularExpression Id. */
  int END = 27;
  /** RegularExpression Id. */
  int CASE = 28;
  /** RegularExpression Id. */
  int OF = 29;
  /** RegularExpression Id. */
  int DOISPONTOS = 30;
  /** RegularExpression Id. */
  int NOT = 31;
  /** RegularExpression Id. */
  int IF = 32;
  /** RegularExpression Id. */
  int THEN = 33;
  /** RegularExpression Id. */
  int ELSE = 34;
  /** RegularExpression Id. */
  int WHILE = 35;
  /** RegularExpression Id. */
  int DO = 36;
  /** RegularExpression Id. */
  int AND = 37;
  /** RegularExpression Id. */
  int OR = 38;
  /** RegularExpression Id. */
  int TYPE = 39;
  /** RegularExpression Id. */
  int ID = 40;
  /** RegularExpression Id. */
  int LETRA = 41;
  /** RegularExpression Id. */
  int NUMERO = 42;
  /** RegularExpression Id. */
  int DIGITO = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<MULTI_LINE_COMMENT>",
    "<MULTI>",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\":=\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"=\"",
    "\"<>\"",
    "\"(\"",
    "\")\"",
    "\"program\"",
    "\"var\"",
    "\"procedure\"",
    "\"begin\"",
    "\"end\"",
    "\"case\"",
    "\"of\"",
    "\":\"",
    "\"not\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"and\"",
    "\"or\"",
    "\"type\"",
    "<ID>",
    "<LETRA>",
    "<NUMERO>",
    "<DIGITO>",
  };

}
