/* Generated By:JavaCC: Do not edit this line. CompilerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int INT = 9;
  /** RegularExpression Id. */
  int PROCEDURE = 10;
  /** RegularExpression Id. */
  int VAR = 11;
  /** RegularExpression Id. */
  int BEGIN = 12;
  /** RegularExpression Id. */
  int END = 13;
  /** RegularExpression Id. */
  int IF = 14;
  /** RegularExpression Id. */
  int ELSE = 15;
  /** RegularExpression Id. */
  int WHILE = 16;
  /** RegularExpression Id. */
  int OR = 17;
  /** RegularExpression Id. */
  int DIV = 18;
  /** RegularExpression Id. */
  int NOT = 19;
  /** RegularExpression Id. */
  int AND = 20;
  /** RegularExpression Id. */
  int GREATER = 21;
  /** RegularExpression Id. */
  int GREATEREQ = 22;
  /** RegularExpression Id. */
  int NOTEQUAL = 23;
  /** RegularExpression Id. */
  int EQUAL = 24;
  /** RegularExpression Id. */
  int LESSER = 25;
  /** RegularExpression Id. */
  int LESSEREQ = 26;
  /** RegularExpression Id. */
  int PLUS = 27;
  /** RegularExpression Id. */
  int MINUS = 28;
  /** RegularExpression Id. */
  int STAR = 29;
  /** RegularExpression Id. */
  int SEMICOLON = 30;
  /** RegularExpression Id. */
  int COMMA = 31;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int LPAR = 33;
  /** RegularExpression Id. */
  int RPAR = 34;
  /** RegularExpression Id. */
  int ASSIGNMENT = 35;
  /** RegularExpression Id. */
  int COLON = 36;
  /** RegularExpression Id. */
  int TESTE = 37;
  /** RegularExpression Id. */
  int UNION = 38;
  /** RegularExpression Id. */
  int LETTER = 39;
  /** RegularExpression Id. */
  int DIGIT = 40;
  /** RegularExpression Id. */
  int NUMBER = 41;
  /** RegularExpression Id. */
  int READ = 42;
  /** RegularExpression Id. */
  int WRITE = 43;
  /** RegularExpression Id. */
  int ID = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "\"program\"",
    "\"boolean\"",
    "\"int\"",
    "\"procedure\"",
    "\"var\"",
    "\"begin\"",
    "\"end\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"or\"",
    "\"div\"",
    "\"not\"",
    "\"and\"",
    "\">\"",
    "\">=\"",
    "\"<>\"",
    "\"=\"",
    "\"<\"",
    "\"<=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\":=\"",
    "\":\"",
    "\"@\"",
    "\"union\"",
    "<LETTER>",
    "<DIGIT>",
    "<NUMBER>",
    "\"read\"",
    "\"write\"",
    "<ID>",
  };

}
