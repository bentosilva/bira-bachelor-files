/* Generated By:JavaCC: Do not edit this line. CompilerConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CompilerConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int PROGRAM = 6;
  /** RegularExpression Id. */
  int INTEGER = 7;
  /** RegularExpression Id. */
  int REAL = 8;
  /** RegularExpression Id. */
  int PROCEDURE = 9;
  /** RegularExpression Id. */
  int VAR = 10;
  /** RegularExpression Id. */
  int TRUE = 11;
  /** RegularExpression Id. */
  int FALSE = 12;
  /** RegularExpression Id. */
  int BEGIN = 13;
  /** RegularExpression Id. */
  int END = 14;
  /** RegularExpression Id. */
  int IF = 15;
  /** RegularExpression Id. */
  int THEN = 16;
  /** RegularExpression Id. */
  int ELSE = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int DO = 19;
  /** RegularExpression Id. */
  int REPEAT = 20;
  /** RegularExpression Id. */
  int UNTIL = 21;
  /** RegularExpression Id. */
  int CONSTANT = 22;
  /** RegularExpression Id. */
  int READLN = 23;
  /** RegularExpression Id. */
  int WRITELN = 24;
  /** RegularExpression Id. */
  int READ = 25;
  /** RegularExpression Id. */
  int WRITE = 26;
  /** RegularExpression Id. */
  int GREATER = 27;
  /** RegularExpression Id. */
  int GREATEREQ = 28;
  /** RegularExpression Id. */
  int NOTEQUAL = 29;
  /** RegularExpression Id. */
  int EQUAL = 30;
  /** RegularExpression Id. */
  int LESSER = 31;
  /** RegularExpression Id. */
  int LESSEREQ = 32;
  /** RegularExpression Id. */
  int PLUS = 33;
  /** RegularExpression Id. */
  int MINUS = 34;
  /** RegularExpression Id. */
  int MULT = 35;
  /** RegularExpression Id. */
  int DIVISION = 36;
  /** RegularExpression Id. */
  int SEMICOLON = 37;
  /** RegularExpression Id. */
  int COMMA = 38;
  /** RegularExpression Id. */
  int DOT = 39;
  /** RegularExpression Id. */
  int LPAR = 40;
  /** RegularExpression Id. */
  int RPAR = 41;
  /** RegularExpression Id. */
  int ASSINGMENT = 42;
  /** RegularExpression Id. */
  int COLON = 43;
  /** RegularExpression Id. */
  int LETTER = 44;
  /** RegularExpression Id. */
  int DIGIT = 45;
  /** RegularExpression Id. */
  int INTEGERNUMBER = 46;
  /** RegularExpression Id. */
  int REALNUMBER = 47;
  /** RegularExpression Id. */
  int ID = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"program\"",
    "\"integer\"",
    "\"real\"",
    "\"procedure\"",
    "\"var\"",
    "\"true\"",
    "\"false\"",
    "\"begin\"",
    "\"end\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"while\"",
    "\"do\"",
    "\"repeat\"",
    "\"until\"",
    "\"const\"",
    "\"readln\"",
    "\"writeln\"",
    "\"read\"",
    "\"write\"",
    "\">\"",
    "\">=\"",
    "\"<>\"",
    "\"=\"",
    "\"<\"",
    "\"<=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\";\"",
    "\",\"",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\":=\"",
    "\":\"",
    "<LETTER>",
    "<DIGIT>",
    "<INTEGERNUMBER>",
    "<REALNUMBER>",
    "<ID>",
  };

}
